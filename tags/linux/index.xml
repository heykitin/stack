<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Kitin's</title><link>/tags/linux/</link><description>Recent content in Linux on Kitin's</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Kitin</copyright><lastBuildDate>Mon, 02 Jan 2023 13:21:30 +0800</lastBuildDate><atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Cloudreve 搭建文件管理</title><link>/archives/cloudreve/</link><pubDate>Mon, 02 Jan 2023 13:21:30 +0800</pubDate><guid>/archives/cloudreve/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>Cloudreve 可以让您快速搭建起公私兼备的网盘系统。Cloudreve 在底层支持不同的云存储平台，用户在实际使用时无须关心物理存储方式。你可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统。&lt;/p>
&lt;h2 id="安装配置">安装配置&lt;/h2>
&lt;h3 id="获取-cloudreve">获取 Cloudreve&lt;/h3>
&lt;ul>
&lt;li>项目地址：&lt;a class="link" href="https://github.com/cloudreve/Cloudreve" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>你可以在 &lt;a class="link" href="https://github.com/cloudreve/Cloudreve/releases" target="_blank" rel="noopener"
>GitHub Release
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 页面获取已经构建打包完成的主程序。其中每个版本都提供了常见系统架构下可用的主程序，命名规则为cloudreve_版本号_操作系统_CPU架构.tar.gz 。比如，普通 64 位 Linux 系统上部署 3.0.0 版本，则应该下载cloudreve_3.0.0_linux_amd64.tar.gz。&lt;/p>
&lt;h3 id="安装启动">安装启动&lt;/h3>
&lt;p>通过上一步获取 Cloudreve 下载地址后，即可下载至本地并启动(我这里最新版本是3.6.2)：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#创建文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /opt/cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#下载程序&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://github.com/cloudreve/Cloudreve/releases/download/3.6.2/cloudreve_3.6.2_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#解压程序&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxvf cloudreve_3.6.2_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#赋予执行权限&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x ./cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#启动 Cloudreve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./cloudreve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cloudreve 在首次启动时，会创建初始管理员账号，请注意保管管理员密码，此密码只会在首次启动时出现。如果您忘记初始管理员密码，需要删除同级目录下的 cloudreve.db，重新启动主程序以初始化新的管理员账户。&lt;/p>
&lt;p>Cloudreve 默认会监听 5212 端口。你可以在浏览器中访问 http://IP:5212 进入 Cloudreve。&lt;/p>
&lt;p>以上步骤操作完后，最简单的部署就完成了。你可能需要一些更为具体的配置，才能让 Cloudreve 更好的工作，具体流程请参考下面的配置流程。&lt;/p>
&lt;h3 id="反向代理">反向代理&lt;/h3>
&lt;p>在自用或者小规模使用的场景下，你完全可以使用 Cloudreve 内置的 Web 服务器。但是如果你需要使用 HTTPS，亦或是需要与服务器上其他 Web 服务共存时，你可能需要使用主流 Web 服务器反向代理 Cloudreve ，以获得更丰富的扩展功能。&lt;/p>
&lt;p>你需要在 Web 服务器中新建一个虚拟主机，完成所需的各项配置（如启用 HTTPS），然后在网站配置文件中加入反代规则：&lt;/p>
&lt;h4 id="nginx-配置">Nginx 配置&lt;/h4>
&lt;p>在网站的 server 字段中加入：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://127.0.0.1:5212&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="nv">$proxy_add_x_forwarded_for&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$http_host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-NginX-Proxy&lt;/span> &lt;span class="s">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_http_version&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="s">.1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_redirect&lt;/span> &lt;span class="no">off&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 如果您要使用本地存储策略，请将下一行注释符删除，并更改大小为理论最大文件尺寸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1"># client_max_body_size 20000m;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="apache-配置">Apache 配置&lt;/h4>
&lt;p>在 VirtualHost 字段下加入反代配置项 ProxyPass，比如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-apache" data-lang="apache">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;VirtualHost&lt;/span> &lt;span class="s">*:80&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ServerName&lt;/span> myapp.example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ServerAdmin&lt;/span> webmaster@example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">DocumentRoot&lt;/span> &lt;span class="sx">/www/myapp/public&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># 以下为关键部分&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">AllowEncodedSlashes&lt;/span> NoDecode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ProxyPass&lt;/span> &lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:5212/&amp;#34;&lt;/span> nocanon
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/VirtualHost&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="caddy-配置">Caddy 配置&lt;/h4>
&lt;p>在网站配置中加入：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">reverse_proxy&lt;/span> &lt;span class="n">127.0.0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">5212&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="后台运行">后台运行&lt;/h3>
&lt;p>这里依旧使用 Systemd 大法：&lt;/p>
&lt;p>创建编辑配置文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/systemd/system/cloudreve.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将下面的 &lt;code>PATH_TO_CLOUDREVE&lt;/code> 换成程序所在目录：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-service" data-lang="service">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Cloudreve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mysqld.service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Wants&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WorkingDirectory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/PATH_TO_CLOUDREVE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/PATH_TO_CLOUDREVE/cloudreve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">on-abnormal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">RestartSec&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">5s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">KillMode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mixed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">StandardOutput&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">StandardError&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">syslog&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>管理命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更新配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 启动服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置开机启动&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 停止服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl stop cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 重启服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl restart cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl status cloudreve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="扩展配置">扩展配置&lt;/h2>
&lt;p>默认情况下，Cloudreve 会使用内置的 SQLite 数据库，并在同级目录创建数据库文件cloudreve.db，如果您想要使用 MySQL，可以按照以下步骤配置，并重启 Cloudreve。注意，Cloudreve 只支持大于或等于 5.7 版本的 MySQL 。&lt;/p>
&lt;h3 id="创建配置文件">创建配置文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /opt/cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim conf.ini
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>加入如下配置，并进行修改：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[System]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 运行模式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Mode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">master&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 监听端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Listen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">:5212&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 是否开启 Debug&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Debug&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Session 密钥, 一般在首次启动时自动生成&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">SessionSecret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">23333&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Hash 加盐, 一般在首次启动时自动生成&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">HashIDSalt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">something really hard to guss&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 数据库相关&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Database]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 数据库类型，目前支持 sqlite/mysql/mssql/postgres&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">mysql&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># MySQL 端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">3306&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">User&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">password&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 数据库地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 数据库名称&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 数据表前缀&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">TablePrefix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">cd_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 字符集&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Charset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">utf8mb4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进程退出前安全关闭数据库连接的缓冲时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">GracePeriod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">30&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置完成后将 Systemd 文件修改如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-service" data-lang="service">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Cloudreve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mysqld.service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Wants&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WorkingDirectory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/PATH_TO_CLOUDREVE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/PATH_TO_CLOUDREVE/cloudreve -c /path/to/conf.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">on-abnormal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">RestartSec&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">5s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">KillMode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mixed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">StandardOutput&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">StandardError&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">syslog&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 &lt;code>/path/to/conf.ini&lt;/code> 为配置文件所在位置，我这里是 &lt;code>/opt/cloudreve/conf.ini&lt;/code>&lt;/p>
&lt;p>然后更新配置并启动服务：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start cloudreve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>使用 Aria2 + AriaNG 搭建离线下载站</title><link>/archives/aria/</link><pubDate>Sat, 24 Dec 2022 10:58:22 +0800</pubDate><guid>/archives/aria/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;h3 id="介绍">介绍&lt;/h3>
&lt;p>Aria2 是目前最强大的全能型下载工具，它支持 BT、磁力、HTTP、FTP 等下载协议，常用做离线下载的服务端。&lt;/p>
&lt;p>AriaNg 是一个让 Aria2 更容易使用的现代 Web 前端。 AriaNg 使用纯 html &amp;amp; javascript 开发，所以其不需要任何编译器或运行环境.。您只要将 AriaNg 放在您的 Web 服务器里并在浏览器中打开即可使用；AriaNg 使用响应式布局，支持各种计算机或移动设备。&lt;/p>
&lt;h3 id="特性">特性&lt;/h3>
&lt;h4 id="aria2">Aria2&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>BT 下载率高、速度快&lt;/p>
&lt;/li>
&lt;li>
&lt;p>重启后不丢失任务进度、不重复下载&lt;/p>
&lt;/li>
&lt;li>
&lt;p>删除正在下载的任务自动删除未完成的文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载错误自动删除未完成的文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载完成自动删除控制文件(.aria2后缀名文件)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载完成自动删除种子文件(.torrent后缀名文件)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载完成自动删除空目录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>BT 下载完成自动清除垃圾文件(文件类型过滤功能)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>BT 下载完成自动清除小文件(文件大小过滤功能)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>有一定的防版权投诉、防迅雷吸血效果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更好的 PT 下载支持&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="ariang">AriaNG&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>纯 Html &amp;amp; Javascript 实现, 不依赖任何运行时&lt;/p>
&lt;/li>
&lt;li>
&lt;p>响应式布局设计, 兼容计算机与移动设备&lt;/p>
&lt;/li>
&lt;li>
&lt;p>友好的界面交互&lt;/p>
&lt;ul>
&lt;li>
&lt;p>任务排序 (按文件名, 文件大小, 进度, 剩余时间, 下载速度等.), 文件排序, Bittorrent 连接节点排序&lt;/p>
&lt;/li>
&lt;li>
&lt;p>任务搜索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>任务重试&lt;/p>
&lt;/li>
&lt;li>
&lt;p>拖拽调整任务顺序&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更详细的任务信息 (健康度, 连接节点客户端信息等.)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据特定文件类型或文件扩展名筛选文件 (视频, 音频, 图片, 文档, 应用程序, 存档文件等.)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多目录任务支持树形结构显示&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Aria2 及单个任务的下载/上传速度图表&lt;/p>
&lt;/li>
&lt;li>
&lt;p>完整支持 Aria2 设置选项&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>深色主题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持网页地址命令行 API&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载完成消息通知&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多语言支持&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持配置多个 aria2 RPC&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持导出和导入设置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>节省带宽, 仅请求增量数据&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="安装配置">安装配置&lt;/h2>
&lt;h3 id="aria2-安装配置">Aria2 安装配置&lt;/h3>
&lt;p>这里使用的一键安装管理脚本增强版；&lt;a class="link" href="https://github.com/P3TERX/aria2.sh" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;p>输入命令进行下载、运行脚本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget -N git.io/aria2.sh &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod +x aria2.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./aria2.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行脚本后，会进入管理面板：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> Aria2 一键安装管理脚本 增强版 &lt;span class="o">[&lt;/span>v2.7.4&lt;span class="o">]&lt;/span> by P3TERX.COM
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1. 升级脚本
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ———————————————————————
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1. 安装 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2. 更新 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 3. 卸载 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ———————————————————————
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1. 启动 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2. 停止 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 3. 重启 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ———————————————————————
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1. 修改 配置
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2. 查看 配置
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 3. 查看 日志
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1. 清空 日志
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ———————————————————————
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1. 手动更新 BT-Tracker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2. 自动更新 BT-Tracker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ———————————————————————
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Aria2 状态: 已安装 &lt;span class="p">|&lt;/span> 已启动
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 自动更新 BT-Tracker: 已开启
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 请输入数字 &lt;span class="o">[&lt;/span>0-12&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输入 &lt;code>1&lt;/code> 进行安装，安装完成之后会跳出配置信息：&lt;/p>
&lt;p>&lt;img src="/archives/aria/1.png"
width="820"
height="160"
srcset="/archives/aria/1_hud81c9af1d88a3fdc1287431bc8338f83_11431_480x0_resize_box_3.png 480w, /archives/aria/1_hud81c9af1d88a3fdc1287431bc8338f83_11431_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="配置信息"
class="gallery-image"
data-flex-grow="512"
data-flex-basis="1230px"
>&lt;/p>
&lt;p>你可以通过执行 &lt;code>./aria2.sh&lt;/code> 然后输入 &lt;code>7&lt;/code> 回车修改配置；记录下配置信息，然后继续进行下一步。&lt;/p>
&lt;hr>
&lt;h3 id="ariang-安装配置">AriaNG 安装配置&lt;/h3>
&lt;ul>
&lt;li>项目地址：&lt;a class="link" href="https://github.com/mayswind/AriaNg" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>首先创建一个网站，可以参考 &lt;a class="link" href="/p/oneinstack/#%e5%88%9b%e5%bb%ba%e8%99%9a%e6%8b%9f%e4%b8%bb%e6%9c%ba" >Oneinstack 创建虚拟主机
&lt;/a> 或 &lt;a class="link" href="/p/caddy/" >Caddy 创建站点
&lt;/a>&lt;/p>
&lt;p>然后打开 &lt;a class="link" href="https://github.com/mayswind/AriaNg/releases/" target="_blank" rel="noopener"
>下载版本
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 页面，将 AriaNG-x.x.x.zip 文件下载上传至网站根目录，并解压。&lt;/p>
&lt;p>访问该网站域名，首次访问会跳出认证错误提示，关闭掉然后进行设置：&lt;/p>
&lt;p>&lt;img src="/archives/aria/2.png"
width="1900"
height="600"
srcset="/archives/aria/2_hu5142c564a6758a06f3b7b47434899b92_66193_480x0_resize_box_3.png 480w, /archives/aria/2_hu5142c564a6758a06f3b7b47434899b92_66193_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="配置过程"
class="gallery-image"
data-flex-grow="316"
data-flex-basis="760px"
>&lt;/p>
&lt;p>点击 &lt;code>AriaNG设置&lt;/code> - &lt;code>RPC&lt;/code> 然后将之前记录好的 Aria 配置信息中的 &lt;code>IPV4 地址、端口&lt;/code> 填入 &lt;code>Aria2 RPC 地址&lt;/code> 然后填入 &lt;code>Aria2 RPC 密钥&lt;/code>；并点击 &lt;code>重新加载 AriaNG&lt;/code>&lt;/p>
&lt;p>配置完成重载后即可进行离线下载。&lt;/p>
&lt;hr>
&lt;h3 id="扩展设置">扩展设置&lt;/h3>
&lt;p>如果你不想通过 http://127.0.0.1:6800 进行连接 Aria2，那么可以进行反代，通过域名连接：&lt;/p>
&lt;p>修改 AriaNG 网站配置，添加下面的配置：&lt;/p>
&lt;ul>
&lt;li>Nginx&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">location&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">/jsonrpc&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://127.0.0.1:6800&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="nv">$proxy_add_x_forwarded_for&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$http_host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-NginX-Proxy&lt;/span> &lt;span class="s">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_http_version&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="s">.1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Caddy&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">reverse_proxy&lt;/span> &lt;span class="nd">/jsonrpc&lt;/span> &lt;span class="n">127.0.0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">6800&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后在 AriaNG 中修改 Aria2 RPC 地址为：&lt;code>https://domian.com:443/jsonrpc&lt;/code>&lt;/p></description></item><item><title>File Browser 在线文件管理</title><link>/archives/filebrowser/</link><pubDate>Fri, 16 Dec 2022 20:09:22 +0800</pubDate><guid>/archives/filebrowser/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>File Browser 是一款使用 Golang 开发的文件管理器，跨平台，免费开源，功能强大。它是一个能独立运行的可执行二进制文件，可以与 Docker 或 Caddy 一起使用。这篇文章分享 Debian 11 下安装 File Browser 的过程。&lt;/p>
&lt;h2 id="安装配置">安装配置&lt;/h2>
&lt;h3 id="安装-file-browser">安装 File Browser&lt;/h3>
&lt;ul>
&lt;li>项目地址： &lt;a class="link" href="https://github.com/filebrowser/filebrowser/" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>通过以下命令进行安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh &lt;span class="p">|&lt;/span> bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装位置： &lt;code>/usr/local/bin/filebrowser&lt;/code>&lt;/p>
&lt;h3 id="配置-file-browser">配置 File Browser&lt;/h3>
&lt;p>首先创建目录用于放置配置数据：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir /opt/filebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建配置数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">filebrowser -d /opt/filebrowser/filebrowser.db config init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置监听地址：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /opt/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> -a 0.0.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置监听端口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /opt/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> -p &lt;span class="m">8080&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置根目录：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /opt/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> -r /var/filebrowser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置语言环境：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /opt/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> --locale zh-cn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加用户：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /opt/filebrowser/filebrowser.db users add user password --perm.admin --locale zh-cn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中的 &lt;code>user&lt;/code> 与 &lt;code>password&lt;/code> 为用户名和密码&lt;/p>
&lt;p>试运行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /opt/filebrowser/filebrowser.db
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后即可通过 &lt;code>http://ip:8080&lt;/code> 进行访问&lt;/p>
&lt;hr>
&lt;h2 id="后台运行及反向代理">后台运行及反向代理&lt;/h2>
&lt;h3 id="后台运行">后台运行&lt;/h3>
&lt;p>后台运行可通过 Systemd 大法：&lt;/p>
&lt;p>创建 &lt;code>filebrowser.service&lt;/code> 然后进行编辑：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/systemd/system/filebrowser.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>复制下面文件并粘贴：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-service" data-lang="service">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">File Browser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/filebrowser -d /path/to/filebrowser.db&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，&lt;code>/path/to/filebrowser&lt;/code> 为 filebrowser 安装位置，可通过 &lt;code>which filebrowser&lt;/code> 查询；&lt;code>/path/to/filebrowser.db&lt;/code> 为 filebrowser 配置数据库位置。&lt;/p>
&lt;p>管理命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更新配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 启动服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start filebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置开机启动&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> filebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 停止服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl stop filebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 重启服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl restart filebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl status filebrowser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="反代设置">反代设置&lt;/h3>
&lt;p>如果不想通过 IP 地址访问，可以设置反向代理通过网址访问：&lt;/p>
&lt;ul>
&lt;li>Nginx 设置：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">location&lt;/span> &lt;span class="s">^~&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://127.0.0.1:8080&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="nv">$proxy_add_x_forwarded_for&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$http_host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-NginX-Proxy&lt;/span> &lt;span class="s">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_http_version&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="s">.1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Caddy 设置：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">log&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">output&lt;/span> &lt;span class="s">file&lt;/span> &lt;span class="s">/var/log/caddy/filebrowser.log&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">level&lt;/span> &lt;span class="s">error&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">root&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/var/filebrowser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">Permissions-Policy&lt;/span> &lt;span class="s">interest-cohort=()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">Strict-Transport-Security&lt;/span> &lt;span class="s">max-age=15768000;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">X-Content-Type-Options&lt;/span> &lt;span class="s">nosniff&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">X-Frame-Options&lt;/span> &lt;span class="s">DENY&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">Referrer-Policy&lt;/span> &lt;span class="s">no-referrer-when-downgrade&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">encode&lt;/span> &lt;span class="s">gzip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">reverse_proxy&lt;/span> &lt;span class="n">127.0.0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">tls&lt;/span> &lt;span class="s">user@email.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置完成后即可通过域名进行访问。&lt;/p>
&lt;h4 id="扩展设置">扩展设置&lt;/h4>
&lt;p>如果你想要通过 &lt;code>https://domian.com/pan&lt;/code> 进行访问，那么需要设置 &lt;code>baseurl&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /opt/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> -b /pan
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后进行反代：&lt;/p>
&lt;ul>
&lt;li>Ngxin：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">location&lt;/span> &lt;span class="p">~&lt;/span>&lt;span class="sr">*&lt;/span> &lt;span class="s">/pan&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://127.0.0.1:8800&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="nv">$proxy_add_x_forwarded_for&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$http_host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-NginX-Proxy&lt;/span> &lt;span class="s">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_http_version&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="s">.1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Upgrade&lt;/span> &lt;span class="nv">$http_upgrade&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Connection&lt;/span> &lt;span class="s">&amp;#34;upgrade&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Caddy:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">reverse_proxy&lt;/span> &lt;span class="nd">/pan/*&lt;/span> &lt;span class="n">127.0.0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>CentOS 7 编译安装 gcc</title><link>/archives/make_gcc/</link><pubDate>Sat, 10 Dec 2022 15:43:06 +0800</pubDate><guid>/archives/make_gcc/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>前两天折腾手上的 CentOS7 服务器，在编译安装软件时发现编译失败；查看了下日志和文档发现是因为 gcc 和 g++ 版本过低了。而通过 yum 查找发现只有 4.8 版本，于是决定通过编译安装新版本，历经了重重困难后终于是安装完毕，并在此进行记录。&lt;/p>
&lt;hr>
&lt;h2 id="安装步骤">安装步骤&lt;/h2>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;ol>
&lt;li>首先安装任意版本 gcc 和一些需要的软件：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum install -y gcc gcc-c++ m4 bzip2 screen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>下载 gcc 源码&lt;/li>
&lt;/ol>
&lt;p>通过 &lt;a class="link" href="https://gcc.gnu.org/pub/gcc/releases" target="_blank" rel="noopener"
>官方仓库
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 下载或 &lt;a class="link" href="https://gcc.gnu.org/mirrors.html" target="_blank" rel="noopener"
>镜像地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 寻找服务器就近地址；找到需要安装的版本下载并解压，我这里选的 9.5.0：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir /opt/gcc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /opt/gcc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://gcc.gnu.org/pub/gcc/releases/gcc-9.5.0/gcc-9.5.0.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxvf gcc-9.5.0.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>下载依赖库&lt;/li>
&lt;/ol>
&lt;p>gcc 官网提供了依赖库下载地址，但是一个个下载比较麻烦，可以通过 gcc 源码自带的 &lt;code>download_prerequisites&lt;/code> 文件；它可以自动下载关联的依赖库并且放置到 gcc 目录下，与 gcc 一起编译：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> gcc-9.5.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./contrib/download_prerequisites
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行后会自动下载依赖库并解压至当前目录下。&lt;/p>
&lt;h3 id="编译安装">编译安装&lt;/h3>
&lt;p>完成上述操作后即可开始编译安装 gcc 了，首先进行 configure 配置与检查：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir build &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">../configure --prefix&lt;span class="o">=&lt;/span>/usr/local/gcc --enable-threads&lt;span class="o">=&lt;/span>posix --disable-checking --disable-multilib --enable-languages&lt;span class="o">=&lt;/span>c,c++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">configure: creating ./config.status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">config.status: creating Makefile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>检查完毕生成 MakeFile 文件后，就可以进行编译安装了，时间比较长；为了防止网络等因素导致断连，可以创建一个窗口然后进行编译安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">screen -S gcc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里可以通过 &lt;code>make -j&lt;/code> 设置线程数来提升编译速度，如果不清楚该设置多少，可以通过 &lt;code>make -j$(nproc)&lt;/code> 自动计算线程数：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="版本替换">版本替换&lt;/h3>
&lt;ol>
&lt;li>卸载旧版本&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum remove -y gcc gcc-c++
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>链接新版本&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ln -s /usr/local/gcc/bin/c++ /usr/bin/c++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/gcc/bin/gcc /usr/bin/cc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/gcc/bin/g++ /usr/bin/g++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/gcc/bin/gcc /usr/bin/gcc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>添加环境变量&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/profile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改 &lt;code>/etc/profile&lt;/code> 文件，在末尾添加如下两句：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LD_LIBRARY_PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/gcc/lib:&lt;span class="nv">$LD_LIBRARY_PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> LD_LIBRARY_PATH
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后刷新一下变量环境：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> /etc/profile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="更新动态库">更新动态库&lt;/h3>
&lt;p>更新完成后需要对旧版本的动态库进行替换，首先查找一下文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">find / -name &lt;span class="s2">&amp;#34;libstdc++.so&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/lib64/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/lib64/libstdc++.so.6.0.19
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.19-gdb.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.19-gdb.pyc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.19-gdb.pyo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/gcc/lib64/libstdc++.so.6.0.28
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/gcc/lib64/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/gcc/lib64/libstdc++.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/gcc/lib64/libstdc++.so.6.0.28-gdb.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到现在老版本是 &lt;code>6.0.19&lt;/code> 而 &lt;code>libstdc++.so.6&lt;/code> 则是 &lt;code>libstdc++.so.6.0.19&lt;/code> 的软链接：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ls -l /usr/lib64/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> root root &lt;span class="m">30&lt;/span> Dec &lt;span class="m">10&lt;/span> 06:50 /usr/lib64/libstdc++.so.6 -&amp;gt; /usr/lib64/libstdc++.so.6.0.19
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后将 gcc 中的动态库复制过去，删除旧版本链接并重新链接新版本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp /usr/local/gcc/lib64/libstdc++.so.6.0.28 /usr/lib64/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -f /usr/lib64/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/lib64/libstdc++.so.6.0.28 /usr/lib64/libstdc++.so.6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更新完毕，接下来就可以正常使用了。&lt;/p>
&lt;h3 id="添加忽略可选">添加忽略（可选）&lt;/h3>
&lt;p>为防止误操作或运行自动化脚本情况导致被覆盖，可以将 cmake 添加忽略，编辑 &lt;code>/etc/yum.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/yum.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在末尾添加上：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">exclude&lt;/span>&lt;span class="o">=&lt;/span>gcc*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>另外需要注意运行自动化脚本前查看一下是否会对配置文件进行编辑，若存在则需要修改脚本。&lt;/p></description></item><item><title>一键 DD 自动重装脚本</title><link>/archives/dd_sh/</link><pubDate>Thu, 01 Dec 2022 10:53:36 +0800</pubDate><guid>/archives/dd_sh/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>VPS 主机一键自动重装系统脚本优化版，基于萌咖脚本优化、开发；DD 过程简单，傻瓜式安装。 脚本支持原版自定义密码安装，可选 Linux 和 Windows 系统，而且脚本支持 Oracle 甲骨文免费云主机使用支持 UEFI 的镜像包安装。&lt;/p>
&lt;p>一键 DD 脚本，支持性好，更智能更全面，支持国内外各种 VPS 重装，特别是对国内各种访问国外资源慢的 VPS 安装有奇效。&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/fcurrk/reinstall" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="安装过程">安装过程&lt;/h2>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;p>为防止异常，先执行以下命令：&lt;/p>
&lt;ul>
&lt;li>Debian/Ubuntu:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update -y &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt dist-upgrade -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>RedHat/CentOS:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum makecache &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> yum update -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装重装系统的前提组件:&lt;/p>
&lt;ul>
&lt;li>Debian/Ubuntu:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt-get install -y xz-utils openssl gawk file wget screen &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> screen -S os
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>RedHat/CentOS:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum install -y xz openssl gawk file glibc-common wget screen &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> screen -S os
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="一键-dd">一键 DD&lt;/h3>
&lt;p>执行命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget --no-check-certificate -O NewReinstall.sh https://git.io/newbetags &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod a+x NewReinstall.sh &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> bash NewReinstall.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如为CN主机(部分主机商已不能使用)，可能出现报错或不能下载脚本的问题，可执行以下命令开始安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget --no-check-certificate -O NewReinstall.sh https://cdn.jsdelivr.net/gh/fcurrk/reinstall@master/NewReinstall.sh &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod a+x NewReinstall.sh &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> bash NewReinstall.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行后，会获取公网 IP、网关和子网掩码，确认一致后，按下 &lt;code>Y&lt;/code> 回车下一步：&lt;/p>
&lt;blockquote>
&lt;p>公网 IP 、网关及子网掩码可在 VPS 控制面板进行查看，若不一致，可输入 &lt;code>N&lt;/code> 进行自定义&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="/archives/dd_sh/1.png"
width="700"
height="400"
srcset="/archives/dd_sh/1_hu8eecd73445506abac9ee4a2934803dae_143707_480x0_resize_box_3.png 480w, /archives/dd_sh/1_hu8eecd73445506abac9ee4a2934803dae_143707_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 网络确认"
class="gallery-image"
data-flex-grow="175"
data-flex-basis="420px"
>&lt;/p>
&lt;p>然后进行系统选择，41合1的系统一键 DD 选择界面，输入 &lt;code>99&lt;/code> 则使用自定义镜像：&lt;/p>
&lt;p>&lt;img src="/archives/dd_sh/2.png"
width="700"
height="720"
srcset="/archives/dd_sh/2_hu21f5d0e9e5cf82f6ab7f93c5c8b682bf_255218_480x0_resize_box_3.png 480w, /archives/dd_sh/2_hu21f5d0e9e5cf82f6ab7f93c5c8b682bf_255218_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 系统选择"
class="gallery-image"
data-flex-grow="97"
data-flex-basis="233px"
>&lt;/p>
&lt;p>若输入 &lt;code>9-16&lt;/code> 安装原版系统，可自定义密码，密码要求8-16位，以英文字母或数字开头，可以是大小写英文字母、数字及7个特殊字符.!$@#&amp;amp;%的任意组合，然后设置端口确认信息后，即可进行安装：&lt;/p>
&lt;p>&lt;img src="/archives/dd_sh/3.png"
width="700"
height="360"
srcset="/archives/dd_sh/3_hu68c416604472933cf2bc0e1c84c573bc_11747_480x0_resize_box_3.png 480w, /archives/dd_sh/3_hu68c416604472933cf2bc0e1c84c573bc_11747_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 自定义设置"
class="gallery-image"
data-flex-grow="194"
data-flex-basis="466px"
>&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>谷歌云原版系统基础上 DD 会出现自动获取的子网掩码为255.255.255.255，如出现这种情况需要手工输入改正为正确的如255.255.255.0，否则会安装完成主机可能会离线。&lt;/p>
&lt;p>阿里云因使用了特殊的驱动，DD 安装 Windows 系统选择阿里云专用版。&lt;/p>
&lt;p>Oracle Cloud（甲骨文云）可选择支持 UEFI 的镜像，注意基础系统最好选择 Ubuntu，如原系统是 CentOS 可能无法成功，注意如是 ARM 机器注意选择同时支持 ARM64 和 UEFI 的镜像。&lt;/p>
&lt;/blockquote>
&lt;p>41合一系统密码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">1、CentOS 7.7 (已关闭防火墙及 SELinux，默认密码 Pwd@CentOS)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2、CentOS 7 (默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3、CentOS 7 (支持 ARM64、UEFI，默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4、CentOS 8 (默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5、Rocky 8 (默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6、Rocky 8 (支持 UEFI，默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7、Rocky 8 (支持 ARM64、UEFI，默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8、CentOS 9 (默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">9、CentOS 6 (官方源原版，默认密码 Minijer.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10、Debian 11 (官方源原版，默认密码 Minijer.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">11、Debian 10 (官方源原版，默认密码 Minijer.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">12、Debian 9 (官方源原版，默认密码 Minijer.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">13、Debian 8 (官方源原版，默认密码 Minijer.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">14、Ubuntu 20.04 (官方源原版，默认密码 Minijer.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">15、Ubuntu 18.04 (官方源原版，默认密码 Minijer.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">16、Ubuntu 16.04 (官方源原版，默认密码 Minijer.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">17、Windows Server 2022 (默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">18、Windows Server 2022 (支持 UEFI，默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">19、Windows Server 2019 (默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">20、Windows Server 2016 (默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">21、Windows Server 2012 (默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">22、Windows Server 2008 (默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">23、Windows Server 2003 (默认密码 cxthhhhh.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">24、Windows 10 LTSC (默认密码 Teddysun.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">25、Windows 10 LTSC (支持 UEFI，默认密码 Teddysun.com)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">26、Windows 7 x86 Lite (默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">27、Windows 7 x86 Lite (阿里云专用，默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">28、Windows 7 x64 Lite (默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">29、Windows 7 x64 Lite (支持 UEFI，默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">30、Windows 10 LTSC Lite (默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">31、Windows 10 LTSC Lite (阿里云专用，默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">32、Windows 10 LTSC Lite (支持 UEFI，默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">33、Windows Server 2003 Lite (C 盘默认10G，默认密码 WinSrv2003x86-Chinese)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">34、Windows Server 2008 Lite (默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">35、Windows Server 2008 Lite (支持 UEFI，默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">36、Windows Server 2012 Lite (默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">37、Windows Server 2012 Lite (支持 UEFI，默认密码nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">38、Windows Server 2016 Lite (默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">39、Windows Server 2016 Lite (支持 UEFI，默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">40、Windows Server 2022 Lite (默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">41、Windows Server 2022 Lite (支持 UEFI，默认密码 nat.ee)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">99、自定义镜像
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>系统名称后带 Lite 的均为精简版，没有的是完整版&lt;/p>
&lt;p>[X64-Legacy-cxthhhhh] 代表系统为 AMD64 位，支持传统 BIOS 启动，cxthhhhh 定制的系统镜像&lt;/p>
&lt;p>ARM64 代表系统支持 ARM64 位&lt;/p>
&lt;p>UEFI 代表系统支持最新的 UEFI 启动，如甲骨文全部都是这种&lt;/p>
&lt;p>aliyun 代表阿里云专用系统镜像&lt;/p>
&lt;p>cxthhhhh、teddysun、nat.ee 均为三位制作系统镜像的大佬代称&lt;/p>
&lt;p>系统密码会在选择相应序号后提示，请注意记录&lt;/p>
&lt;p>系统安装过程会自动断开 SSH 连接，属于正常现象；等待安装完成后即可进行重连&lt;/p>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/fcurrk/reinstall" target="_blank" rel="noopener"
>一键 DD 脚本 Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://git.beta.gs/" target="_blank" rel="noopener"
>一键 DD 脚本网址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Linux 服务器设置 Swap 分区</title><link>/archives/setswap/</link><pubDate>Fri, 11 Nov 2022 19:15:56 +0800</pubDate><guid>/archives/setswap/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>这两天闲着没事，将手头上闲置的一台 512M 小内存服务器拿出来折腾，编译安装 MariaDB 的时候由于内存不足导致编译失败。由于我是个小白，且一直是使用的 2/4G 服务器，以前从来没有注意过这个；直到现在遇到这样的问题。。。&lt;/p>
&lt;h3 id="swap-分区">Swap 分区&lt;/h3>
&lt;p>别名：交换分区。 Swap 分区在系统的物理内存不够用的时候，把硬盘内存中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到 Swap 分区中，等到那些程序要运行时，再从 Swap 分区中恢复保存的数据到内存中。&lt;/p>
&lt;hr>
&lt;h2 id="设置步骤">设置步骤&lt;/h2>
&lt;p>一般来说，很多服务器开通的时候就自带了 Swap 分区，在日常使用下并不需要对其进行额外的操作；但是有时候还是要视情况对 Swap 分区进行适当的增减；下面来看看 Swap 分区的设置 (这里我以我 4G 内存服务器作为演示，请根据实际情况修改数据) ：&lt;/p>
&lt;h3 id="查看分区">查看分区&lt;/h3>
&lt;ol>
&lt;li>通过 &lt;code>free -h&lt;/code> 命令查看&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">free -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> total used free shared buff/cache available
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Mem: 3.6Gi 123Mi 3.3Gi 1.0Mi 182Mi 3.3Gi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Swap: 0B 0B 0B
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过以上命令可以看到当前内存及 Swap 分区使用状态，如果 Swap 分区和我这里一样显示 0B 0B 0B 则代表并没有开启 Swap 分区。&lt;/p>
&lt;ol start="2">
&lt;li>通过 &lt;code>swapon --show&lt;/code> 命令查看&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">swapon --show
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>若开启了 Swap 分区，则会显示 Swap 分区状态；若没有开启 Swap 分区，则不会返回数据。&lt;/p>
&lt;h3 id="创建分区">创建分区&lt;/h3>
&lt;h4 id="交换分区的大小分配">交换分区的大小分配&lt;/h4>
&lt;p>查找了一下资料，发现众说纷纭。。。最后决定采用如下方案：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;strong>物理内存&lt;/strong>&lt;/th>
&lt;th style="text-align:center">&lt;strong>建议 Swap 分区大小&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&amp;lt; 4GB&lt;/td>
&lt;td style="text-align:center">2倍内存，不超过4G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">4-8G&lt;/td>
&lt;td style="text-align:center">等于内存大小&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">8-64G&lt;/td>
&lt;td style="text-align:center">8G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">64-256G&lt;/td>
&lt;td style="text-align:center">16G&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="创建交换分区">创建交换分区&lt;/h4>
&lt;ol>
&lt;li>使用 &lt;code>fallocate&lt;/code> 命令创建用于交换的文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">fallocate -l 4G /swapfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果报错可以使用 &lt;code>dd&lt;/code> 命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dd &lt;span class="k">if&lt;/span>&lt;span class="o">=&lt;/span>/dev/zero &lt;span class="nv">of&lt;/span>&lt;span class="o">=&lt;/span>/swapfile &lt;span class="nv">bs&lt;/span>&lt;span class="o">=&lt;/span>1M &lt;span class="nv">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">4096&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>设置权限&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">600&lt;/span> /swapfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>设置交换分区&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkswap /swapfile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Setting up swapspace version 1, &lt;span class="nv">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span> GiB &lt;span class="o">(&lt;/span>&lt;span class="m">4294963200&lt;/span> bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">no label, &lt;span class="nv">UUID&lt;/span>&lt;span class="o">=&lt;/span>e3edf2fd-7259-4d00-98be-5afc604c1271
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>成功则返回如上信息。&lt;/p>
&lt;ol start="4">
&lt;li>启用分区&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">swapon /swapfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>验证分区&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">swapon --show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NAME TYPE SIZE USED PRIO
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/swapfile file 4G 0B -2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>开启成功则返回 Swap 分区状态&lt;/p>
&lt;hr>
&lt;h3 id="开机启动及分配控制">开机启动及分配控制&lt;/h3>
&lt;h4 id="设置开机启动">设置开机启动&lt;/h4>
&lt;ol>
&lt;li>编辑 &lt;strong>/etc/fstab&lt;/strong> 文件添加这一行：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/fstab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加如下:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/swapfile swap swap defaults &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>或执行如下命令直接写入：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;/swapfile swap swap defaults 0 0&amp;#34;&lt;/span> &amp;gt;&amp;gt;/etc/fstab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="swap-分区分配控制">Swap 分区分配控制&lt;/h4>
&lt;ul>
&lt;li>Swappiness&lt;/li>
&lt;/ul>
&lt;p>Swappiness 是一个 Linux 内核属性，用于定义系统使用交换空间的频率。 Swappiness 可以具有0到100之间的值。较低的值将使内核尽可能避免交换，而较高的值将使内核更积极地使用交换空间；默认的 swappiness 值为60.可以通过键入以下命令来检查当前的 swappiness 值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat /proc/sys/vm/swappiness
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">60&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于桌面端，可以使用60的 swappiness 值；但对于生产服务器，可能需要设置较低的值，比如我设置为10：&lt;/p>
&lt;ol>
&lt;li>临时设置：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sysctl vm.swappiness&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>要使之重启后保持不变，可以附加到 &lt;strong>/etc/sysctl.conf&lt;/strong> 文件：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/sysctl.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在最后添加如下&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vm.swappiness&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;vm.swappiness=10&amp;#34;&lt;/span> &amp;gt;&amp;gt;/etc/sysctl.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="删除及调整大小">删除及调整大小&lt;/h3>
&lt;p>如果需要对交换分区进行删除，可以按照下列步骤：&lt;/p>
&lt;ol>
&lt;li>停用交换分区&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">swapoff /swapfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>在 &lt;strong>/etc/fstab&lt;/strong> 文件中删除交换文件条目：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/fstab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除或注释下面一行：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/swapfile swap swap defaults &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>删除 swapfile 文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rm /swapfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>若需要修改分区大小，可先停用交换分区，然后直接删除 swapfile 文件并重新创建。&lt;/p>
&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是本篇的全部内容，希望对大家有所帮助。&lt;/p>
&lt;p>对于 Linux，无论是多大内存，还是要设立 Swap 交换分区，这样有利于在内存耗尽时及时启用 Swap 空间。另外，可以视情况对 Swap 分区大小进行临时调整，比如我前文所说用 512M 内存服务器编译安装高版本 MariaDB ，那么我可以先将 Swap 分区临时设置为 2G ，编译安装完成后再调整。&lt;/p></description></item><item><title>CentOS7 下 MariaDB 安装失败解决方法</title><link>/archives/centos_sql_error/</link><pubDate>Sat, 05 Nov 2022 17:18:10 +0800</pubDate><guid>/archives/centos_sql_error/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>由于最近腾讯云双11优惠活动，自己购买了一台腾讯云的轻量应用服务器 (老实说还是挺实惠的-。-) 加上自己按捺不住折腾的心，这次一改以前一直使用的 Debian 而选择了 CentOS ；这次的服务器系统我选择的是 CentOS7 ，LNMP 安装方式则是 Oneinstack 和 LNMP 一键安装包都进行了尝试。Debian 下，它们都是完美安装。但是 Centos7 下，在安装过程中 Oneinstack 和 LNMP 一键安装包都碰到了 MariaDB/MySQL 无法安装的情况，由于我是一个 Linux 小白，平常只靠从网上学习，知识量不足；所以在此记录下这次解决过程，以便日后进行查阅。&lt;/p>
&lt;hr>
&lt;h2 id="解决过程">解决过程&lt;/h2>
&lt;h3 id="报错">报错&lt;/h3>
&lt;p>和往常一样，服务器开通后，我通过 &lt;code>yum&lt;/code> 进行了一些基本的 &lt;code>update&lt;/code> 、&lt;code>autoremove&lt;/code> 、&lt;code>clean&lt;/code> 等操作，然后创建 Screen 窗口，输入 LNMP 一键包命令就开始安装了，到最后却发现 &lt;strong>MariaDB&lt;/strong> 安装失败；一开始也不知道啥情况，以为是我选的源码编译方式有问题，后面试了二进制安装依然如此：&lt;/p>
&lt;p>&lt;img src="/archives/centos_sql_error/1.png"
width="865"
height="341"
srcset="/archives/centos_sql_error/1_hudbdfc3d5c8c8e6002944dd56df4d9048_207022_480x0_resize_box_3.png 480w, /archives/centos_sql_error/1_hudbdfc3d5c8c8e6002944dd56df4d9048_207022_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 安装失败"
class="gallery-image"
data-flex-grow="253"
data-flex-basis="608px"
>&lt;/p>
&lt;h3 id="尝试">尝试&lt;/h3>
&lt;p>后面我在网上查了很久，他们说是 Centos 自带了 RPM 包下的 MariaDB ；新安装会有冲突，所以要进行卸载，于是我通过 rpm 命令进行卸载：&lt;/p>
&lt;blockquote>
&lt;p>顺带一提，这搜索体验真的是。。。不能说是差强人意吧，也只能说是一言难尽了。。。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rpm -qa&lt;span class="p">|&lt;/span>grep mariadb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rpm -e mariadb-lib
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发现存在依赖关系，于是加上 &lt;code>nodeps&lt;/code> 参数：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rpm -e --nodeps mariadb-lib
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着满怀期待的又进行安装，最后还是报错-。-&lt;/p>
&lt;h3 id="错误日志">错误日志&lt;/h3>
&lt;p>还是硬着头皮来看错误日志吧，我将 &lt;strong>/root/lnmp-install.log&lt;/strong> 安装日志下载下来进行查看。虽然说很长，咱也看不太懂。。。最后还是找到了一些破绽。。。发现应该是 &lt;strong>Cmake&lt;/strong> 版本低了：&lt;/p>
&lt;p>&lt;img src="/archives/centos_sql_error/2.png"
width="685"
height="459"
srcset="/archives/centos_sql_error/2_hu75d6d2a294a68bd65fd381e6476a6315_30039_480x0_resize_box_3.png 480w, /archives/centos_sql_error/2_hu75d6d2a294a68bd65fd381e6476a6315_30039_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 错误日志"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="358px"
>&lt;/p>
&lt;p>可以看到，这里要求 &lt;strong>3.0.0&lt;/strong> 版本或者更高，而我的版本为 &lt;strong>2.8.12.2&lt;/strong> ，于是我返回 SSH 使用 &lt;code>yum update cmake&lt;/code> 更新之后发现还是 &lt;strong>2.8.12.2&lt;/strong> 版本，于是选择下载最新版本进行编译。&lt;/p>
&lt;h3 id="下载编译-cmake">下载编译 Cmake&lt;/h3>
&lt;p>打开 &lt;a class="link" href="https://cmake.org/files/LatestRelease/Cmake" target="_blank" rel="noopener"
>版本下载列表
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 找到最新版本，我这里目前最新版是 &lt;strong>3.24.3&lt;/strong> ，然后复制链接，回到 SSH&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 卸载Cmake&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum remove -y cmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir /opt/cmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /opt/cmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 下载压缩包&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://cmake.org/files/LatestRelease/cmake-3.24.3.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 解压&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -zxvf cmake-3.24.3.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum install -y gcc gcc-c++ openssl-devel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> cmake-3.24.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置编译目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --prefix&lt;span class="o">=&lt;/span>/usr/local/cmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> make install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建链接&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/cmake/bin/cmake /usr/bin/cmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmake -version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="重新安装数据库">重新安装数据库&lt;/h3>
&lt;p>一通操作下来，Cmake 已经是最新版本了，然后进入到 &lt;strong>~/lnmp1.9&lt;/strong> 也就是 LNMP 一键包解压目录下进行操作：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./install.sh db
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后选择需要安装的数据库及版本，接下来等待安装完成：&lt;/p>
&lt;p>&lt;img src="/archives/centos_sql_error/3.png"
width="928"
height="391"
srcset="/archives/centos_sql_error/3_huda4be20eb036038aadd088c6e226da8b_162830_480x0_resize_box_3.png 480w, /archives/centos_sql_error/3_huda4be20eb036038aadd088c6e226da8b_162830_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 安装完成"
class="gallery-image"
data-flex-grow="237"
data-flex-basis="569px"
>&lt;/p>
&lt;p>OK 打开浏览器输入 IP 地址进行访问，还是熟悉的默认页面：&lt;/p>
&lt;p>&lt;img src="/archives/centos_sql_error/4.png"
width="1549"
height="435"
srcset="/archives/centos_sql_error/4_hua19581040bc1ab46bde67107b44071b3_62918_480x0_resize_box_3.png 480w, /archives/centos_sql_error/4_hua19581040bc1ab46bde67107b44071b3_62918_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 登录页面"
class="gallery-image"
data-flex-grow="356"
data-flex-basis="854px"
>&lt;/p>
&lt;p>然后点击 phpMyAdmin 登陆进去，OK 完美！&lt;/p>
&lt;p>&lt;img src="/archives/centos_sql_error/5.png"
width="1217"
height="589"
srcset="/archives/centos_sql_error/5_hu690cf7f1faeba90e99f62d8fe55f0533_123368_480x0_resize_box_3.png 480w, /archives/centos_sql_error/5_hu690cf7f1faeba90e99f62d8fe55f0533_123368_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 软件界面"
class="gallery-image"
data-flex-grow="206"
data-flex-basis="495px"
>&lt;/p>
&lt;h3 id="添加忽略可选">添加忽略（可选）&lt;/h3>
&lt;p>为防止误操作或运行自动化脚本情况导致被覆盖，可以将 cmake 添加忽略，编辑 &lt;code>/etc/yum.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/yum.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在末尾添加上：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">exclude&lt;/span>&lt;span class="o">=&lt;/span>cmake*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>另外需要注意运行自动化脚本前查看一下是否会对配置文件进行编辑，若存在则需要修改脚本。&lt;/p>
&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是我在使用 CentOS 安装 LNMP 环境时 MariaDB/MySQL 安装失败的情况，咱也不知道是个例还是就我这个小白这样。。。在此进行一个记录。希望能对大家有所帮助。最后顺带提一下，我咋就想到去折腾 CentOS 了；一直在用的Debian 它不香嘛。。。&lt;/p></description></item><item><title>VPS 的一些基本配置及优化</title><link>/archives/setvps/</link><pubDate>Fri, 18 Feb 2022 17:14:41 +0800</pubDate><guid>/archives/setvps/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>由于最近在使用 VPS 时，发现 SSH 一直在被人暴力扫描，虽然说没有被破解，但是老是被人盯着总感觉不太舒服。其实要保证安全登录，最简单的方法就是修改默认的 22 端口；最彻底的方法，是禁用密码登录，改用密钥登录，只要保证密钥安全，服务器也没有人能进入了。而且现在手中的 VPS 越来越多，每次都要进行一些基本配置。所以对这些配置进行一下记录，方便以后查看。&lt;/p>
&lt;h2 id="配置">配置&lt;/h2>
&lt;h3 id="修改登录密码">修改登录密码&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">passwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>输入密码是不会显示的，按照提示输入新密码回车两次即可&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="更新安装基本软件">更新、安装基本软件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt full-upgrade -y &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt autoremove -y &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt autoclean
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install -y wget curl vim screen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="修改ssh端口">修改SSH端口&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>这里我使用 vim 编辑，拿不准可以直接下载到本地编辑&lt;/p>
&lt;/blockquote>
&lt;p>找到默认 22 端口，将光标移动到该位置，输入 &lt;code>i &lt;/code> 进行编辑；去掉前面的注释，并且添加一个端口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Port &lt;span class="m">22&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Port &lt;span class="m">1234&lt;/span> &lt;span class="c1"># 以 1234 端口为例&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编辑完成后按下 &lt;code>ESC&lt;/code> 然后输入 &lt;code>:wq!&lt;/code> 保存退出，并重启 &lt;code>sshd&lt;/code> 服务进程：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置完毕后需要开放新端口，并开启防火墙；如果 VPS 管理面板自带防火墙可以通过管理面板开放端口；没有的话，我一般用 &lt;code>ufw&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt install -y ufw
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ufw allow &lt;span class="m">1234&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ufw &lt;span class="nb">enable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>开启防火墙后记得通过 &lt;code>ufw allow xx&lt;/code> 开放常用端口&lt;/p>
&lt;/blockquote>
&lt;p>设置完成后，通过新端口进行 SSH 登录，测试是否成功，并且将默认的端口关闭：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将默认端口一行注释掉：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#Port 22&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Port &lt;span class="m">1234&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="设置秘钥登录">设置秘钥登录&lt;/h3>
&lt;p>修改端口虽然可以提升安全性，但是还是会被扫出端口，所以我们可以设置秘钥登录，并关闭密码登录。&lt;/p>
&lt;ul>
&lt;li>通过命令行生成公钥与私钥&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>提示如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Generating public/private rsa key pair.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter file in which to save the key &lt;span class="o">(&lt;/span>/root/.ssh/id_rsa&lt;span class="o">)&lt;/span>: &lt;span class="c1"># 输入存储位置，建议回车使用默认位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter passphrase &lt;span class="o">(&lt;/span>empty &lt;span class="k">for&lt;/span> no passphrase&lt;span class="o">)&lt;/span>: &lt;span class="c1"># 输入密码(留空则直接回车)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter same passphrase again: &lt;span class="c1"># 重复输入密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your identification has been saved in /root/.ssh/id_rsa.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your public key has been saved in /root/.ssh/id_rsa.pub. &lt;span class="c1"># 公钥与私钥存储位置&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>生成的秘钥文件位于 &lt;code>root/.ssh&lt;/code> 目录下&lt;/p>
&lt;/blockquote>
&lt;p>也可以通过 &lt;code>XShell&lt;/code> 或者 &lt;code>PuTTy Gen&lt;/code> 软件进行生成秘钥文件，但是要注意它们生成的私钥并不通用，需要通过 &lt;code>PuTTy Gen&lt;/code> 进行转换。&lt;/p>
&lt;ul>
&lt;li>上传/配置公钥文件&lt;/li>
&lt;/ul>
&lt;p>如果是使用命令行在 VPS 生成的秘钥文件，则将私钥文件下载并导入 SSH 软件即可。若是软件生成，则将 &lt;code>id_rsa.pub&lt;/code> 文件上传至 &lt;code>root/.ssh&lt;/code> 目录下，完成上述操作后执行如下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mv id_rsa.pub authorized_keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">600&lt;/span> ./authorized_keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后修改 &lt;code>sshd_config&lt;/code> 找到并修改成下面个配置 ：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">PubkeyAuthentication yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>保存退出，并重启服务进程：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 SSH 软件测试是否可以通过秘钥文件进行登录。&lt;/p>
&lt;ul>
&lt;li>禁止密码登录&lt;/li>
&lt;/ul>
&lt;p>确认可以通过秘钥文件进行登录后，就可以禁止密码登录了，修改 &lt;code>etc/ssh/sshd_config&lt;/code> 文件，找到并修改成如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">PasswordAuthentication no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启 &lt;code>sshd&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="开启加速服务">开启加速服务&lt;/h3>
&lt;p>复制下面命令，粘贴回车：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget -N --no-check-certificate &lt;span class="s2">&amp;#34;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x tcp.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./tcp.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>面板如下：&lt;/p>
&lt;p>&lt;img src="/archives/setvps/1.png"
width="700"
height="350"
srcset="/archives/setvps/1_hu94e41dce69550f3ce8ef0aa12afc1238_130680_480x0_resize_box_3.png 480w, /archives/setvps/1_hu94e41dce69550f3ce8ef0aa12afc1238_130680_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 操作面板"
class="gallery-image"
data-flex-grow="200"
data-flex-basis="480px"
>&lt;/p>
&lt;p>操作方法：先安装内核，重启 VPS 让内核生效，再启动对应的加速即可。数字 1 的 BBR/BBR 魔改内核对应数字 4、5、6 的 BBR 加速、BBR 魔改加速和暴力 BBR 魔改版加速。数字 2 的 BBRplus 内核对应数字 7 的 BBRplus 加速。数字 3 的锐速加速内核对应数字 8 的锐速加速。&lt;/p>
&lt;p>先安装内核，等待提示重启后输入 &lt;code>y&lt;/code> 进行重启：&lt;/p>
&lt;p>&lt;img src="/archives/setvps/2.png"
width="700"
height="500"
srcset="/archives/setvps/2_hu95b0bd781b4f3488105adc50efb4203d_247003_480x0_resize_box_3.png 480w, /archives/setvps/2_hu95b0bd781b4f3488105adc50efb4203d_247003_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 重启提示"
class="gallery-image"
data-flex-grow="140"
data-flex-basis="336px"
>&lt;/p>
&lt;p>如果安装内核过程中，出现以下情况，选择否即可：&lt;/p>
&lt;p>&lt;img src="/archives/setvps/3.png"
width="905"
height="360"
srcset="/archives/setvps/3_hud49bf6abde7ecb7140857e7670f57d84_18388_480x0_resize_box_3.png 480w, /archives/setvps/3_hud49bf6abde7ecb7140857e7670f57d84_18388_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 特殊情况"
class="gallery-image"
data-flex-grow="251"
data-flex-basis="603px"
>&lt;/p>
&lt;p>重启完成后，输入 &lt;code>./tcp.sh&lt;/code> 进入加速面板，选择对应内核的加速并输入对应数字开启加速。看到提示加速成功后，再次输入 &lt;code>./tcp.sh&lt;/code> 检查是否成功开启&lt;/p>
&lt;p>如果想换一个加速，输入 &lt;code>./tcp.sh&lt;/code> 进入面板，并输入数字9进行卸载加速，然后进行同样的操作，安装内核再安装对应内核的加速即可。&lt;/p>
&lt;hr>
&lt;p>至此 VPS 的一些基本配置与优化结束&lt;/p></description></item></channel></rss>